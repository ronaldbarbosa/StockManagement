@page "/perfil"
@inject IStringLocalizer<UserResource> UserLocalizer
@inject IStringLocalizer<Resource> CommonLocalizer
@inject IJSRuntime JS

<PageTitle>SM - @UserLocalizer["Profile"]</PageTitle>

<h3>@UserLocalizer["Profile"]</h3>

<div class="card card-with-nav mt-4">
    <div class="card-header">
        <div class="row row-nav-line">
            <ul class="nav nav-tabs nav-line nav-color-secondary w-100 ps-4" role="tablist">
                <li class="nav-item cursor-pointer" role="presentation">
                    <a class="nav-link active show" data-bs-toggle="tab" data-bs-target="#personalInfo" role="tab" aria-controls="personalInfo" aria-selected="true">@UserLocalizer["ProfilePersonalInfo"]</a>
                </li>
                <li class="nav-item cursor-pointer" role="presentation">
                    <a class="nav-link" data-bs-toggle="tab" data-bs-target="#accessInfo" role="tab" aria-controls="accessInfo" aria-selected="false">@UserLocalizer["ProfileAccessInfo"]</a>
                </li>
            </ul>
        </div>
    </div>
    <div class="card-body">
        @if (Errors.Count > 0 && ErrorArea is ErrorArea.ProfileInfo)
        {
            <ErrorList Errors=Errors Area="Register" Title=@UserLocalizer["UpdateUserError"] />
        }

        @if (HasAlertMessage)
        {
            <AlertMessage Type=@AlertTypes.success Title=@UserLocalizer["UpdateUserSuccess"] Message=@UserLocalizer["UpdateUserSuccessMessage"] />
        }

        <EditForm Model=@User OnValidSubmit="OnValidSubmitAsync">
            <DataAnnotationsValidator />

            <div class="tab-content">
                <div class="tab-pane fade show active" id="personalInfo" role="tabpanel" tabindex="0">
                    <div class="row row-cols-1 row-cols-lg-2">
                        <div class="col col-lg-4">
                            <div class="d-flex flex-column align-items-center">
                                <div class="avatar avatar-profile position-relative">
                                    @if (string.IsNullOrEmpty(User.AvatarUrl))
                                    {
                                        string[] nomes = User.Name.Split(' ');
                                        if (nomes.Length >= 2)
                                        {
                                            string avatar = string.Concat(nomes[0][0], nomes[1][0]);

                                            <span class="avatar-img avatar-title rounded-circle border border-white fs-1">
                                                @avatar
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="avatar-img avatar-title rounded-circle border border-white fs-1">
                                                US
                                            </span>
                                        }
                                    }
                                    else
                                    {
                                        <img src=@User.AvatarUrl class="avatar-img rounded-circle" />
                                    }
                                    <button type="button" class="btn btn-primary btn-icon rounded-circle position-absolute bottom-0 p-4"
                                            data-bs-toggle="collapse" data-bs-target="#uploadArea">
                                        <i class="fas fa-camera"></i>
                                    </button>
                                </div>
                                <div class="collapse mt-4" id="uploadArea">
                                    <InputFile OnChange="HandleFile" accept="image/*" />
                                    <ButtonComponent ButtonClass="btn-primary" ButtonText=@UserLocalizer["ProfileUpdatePhoto"] ButtonType="ButtonTypes.button" IsLoading=@Loading
                                                     IconClass="fa-cloud-upload-alt" OnClickCallback="@UploadFile" />
                                </div>
                            </div>
                        </div>
                        <div class="col col-lg-8">
                            <TextInputComponent Id="Name" Label=@UserLocalizer["UserName"] Type=@InputTypes.text Value=@User.Name
                                                ValueChanged=@(v => User.Name = v) ValueExpression="() => User.Name" />
                            <TextInputComponent Id="PhoneNumber" Label=@UserLocalizer["UserPhoneNumber"] Type=@InputTypes.text Value=@User.PhoneNumber
                                                ValueChanged=@(v => User.PhoneNumber = v) ValueExpression="() => User.PhoneNumber" />
                            <CheckInputComponent Id="PhoneNumberConfirmed" Label=@UserLocalizer["UserPhoneNumberConfirmed"] Value=@(User.PhoneNumberConfirmed)
                                                 ValueChanged=@(v => User.PhoneNumberConfirmed = v) ValueExpression="() => User.PhoneNumberConfirmed" Disabled=true />
                        </div>
                    </div>
                    <div class="row row-cols-1">
                        <div class="col mt-4 text-end">
                            <ButtonComponent ButtonType="ButtonTypes.submit" ButtonClass="btn-success" IconClass="fa-save" ButtonText=@CommonLocalizer["CommonSave"] IsLoading="@(Loading && Errors.Count == 0)" />
                            <ButtonComponent ButtonType="ButtonTypes.button" ButtonClass="btn-black" IconClass="fa-reply" ButtonText=@CommonLocalizer["CommonReturn"] IsLoading="@false" OnClickCallback="RedirectToLogin" />
                        </div>
                    </div>
                </div>

                <div class="tab-pane fade" id="accessInfo" role="tabpanel" tabindex="0">
                    <div class="row row-cols-1 row-cols-lg-2">
                        <div class="col">
                            <TextInputComponent Id="Email" Label=@CommonLocalizer["LoginEmail"] Type=@InputTypes.email Value=@User.Email
                                                ValueChanged=@(v => User.Email = v) ValueExpression="() => User.Email" Disabled="true" />
                        </div>
                        <div class="col d-flex">
                            <CheckInputComponent Id="EmailConfirmed" Label=@UserLocalizer["ProfileEmailConfirmed"] Value=@(User.EmailConfirmed)
                                                 ValueChanged=@(v => User.EmailConfirmed = v) ValueExpression="() => User.EmailConfirmed" Disabled=true />
                            <CheckInputComponent Id="TwoFactorEnabled" Label=@UserLocalizer["ProfileTwoFactorEnabled"] Value=@(User.TwoFactorEnabled)
                                                 ValueChanged=@(v => User.TwoFactorEnabled = v) ValueExpression="() => User.TwoFactorEnabled" Disabled=true />
                        </div>
                    </div>

                    <div class="row row-cols-1">
                        <div class="col text-end mt-4">
                            <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#modal-update-password">
                                <i class="fas fa-key me-2"></i>
                                @UserLocalizer["UpdateUserPassword"]
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>

<div class="modal fade" id="modal-update-password" tabindex="-1" role="dialog" aria-labelledby="modal-update-password" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@UserLocalizer["UpdateUserPassword"]</h5>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close">
                    <i aria-hidden="true" class="fa-solid fa-xmark"></i>
                </button>
            </div>
            <div class="modal-body p-0">
                <div class="card mb-0">                                                                 
                    <div class="card-body">
                        <p class="mb-0">@UserLocalizer["UpdateUserPasswordMessage"]</p>

                        @if (Errors.Count > 0 && ErrorArea is ErrorArea.UpdatePasswordModal)
                        {
                            <ErrorList Errors=Errors Area="UpdatePassword" Title=@UserLocalizer["UpdateUserPasswordError"] />
                        }

                        <EditForm Model=@UserAccess OnValidSubmit=@UpdateUserAccessInfo>
                            <TextInputComponent Id="OldPassword" Label=@UserLocalizer["UserCurrentPassword"] Type=@InputTypes.password Value=@UserAccess.OldPassword
                                                ValueChanged=@(v => UserAccess.OldPassword = v) ValueExpression="() => UserAccess.OldPassword" />
                            <TextInputComponent Id="NewPassword" Label=@UserLocalizer["UserNewPassword"] Type=@InputTypes.password Value=@UserAccess.NewPassword
                                                ValueChanged=@(v => UserAccess.NewPassword = v) ValueExpression="() => UserAccess.NewPassword" />
                            <ButtonComponent ButtonType="ButtonTypes.submit" ButtonClass="btn-success mt-4 me-2 float-end" IconClass="fa-save" ButtonText=@CommonLocalizer["CommonSave"]
                                             IsLoading="@(Loading && Errors.Count == 0)" />
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>  